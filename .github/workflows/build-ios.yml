name: Build LLVM iOS Static Library

on:
  push:
    branches: [ main, master, develop, '*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        repository: llvm/llvm-project
        submodules: 'recursive'
    
    - name: Install CMake
      run: |
        brew install cmake ninja

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.4'
        
    - name: Download iOS toolchain
      run: |
        curl -L https://raw.githubusercontent.com/leetal/ios-cmake/master/ios.toolchain.cmake -o ios.toolchain.cmake

    - name: Build for iOS Device (arm64)
      run: |
        mkdir build-ios-device
        cd build-ios-device
        cmake ../llvm \
          -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=../ios.toolchain.cmake \
          -DPLATFORM=OS64 \
          -DENABLE_BITCODE=0 \
          -DENABLE_ARC=0 \
          -DENABLE_VISIBILITY=1 \
          -DARCHS="arm64" \
          -DCMAKE_BUILD_TYPE=Release \
          -DDEPLOYMENT_TARGET=13.0 \
          -DCMAKE_C_FLAGS="-arch arm64 -Wno-shorten-64-to-32" \
          -DCMAKE_CXX_FLAGS="-arch arm64 -Wno-shorten-64-to-32" \
          -DLLVM_TARGETS_TO_BUILD="AArch64;ARM" \
          -DLLVM_ENABLE_PROJECTS="clang;lldb" \
          -DLLVM_BUILD_TOOLS=OFF \
          -DLLVM_BUILD_UTILS=OFF \
          -DLLVM_INCLUDE_TESTS=OFF \
          -DLLVM_INCLUDE_EXAMPLES=OFF \
          -DLLVM_ENABLE_BACKTRACES=OFF \
          -DLLVM_ENABLE_TERMINFO=OFF \
          -DLLVM_ENABLE_ZLIB=OFF \
          -DLLVM_BUILD_STATIC=ON \
          -DBUILD_SHARED_LIBS=OFF

        cmake --build . --config Release

    - name: Package Library
      run: |
        mkdir -p universal/lib
        cp build-ios-device/lib/libLLVM*.a universal/lib/
        cp build-ios-device/lib/libclang*.a universal/lib/
        cp build-ios-device/lib/liblldb*.a universal/lib/
        
        # Copy headers
        mkdir -p universal/include
        cp -r build-ios-device/include/* universal/include/
        cp -r llvm/include/* universal/include/
        cp -r clang/include/* universal/include/
        cp -r lldb/include/* universal/include/
        
        # Create zip package
        cd universal
        zip -r ../llvm-ios.zip .

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: llvm-ios
        path: llvm-ios.zip