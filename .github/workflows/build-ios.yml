name: Build LLVM iOS Static Library

on:
  push:
    branches: [ main, master, develop, '*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v4
      with:
        repository: llvm/llvm-project
        submodules: 'recursive'
    
    - name: Install CMake and LLVM
      run: |
        brew install cmake ninja llvm
        echo "LLVM_PATH=$(brew --prefix llvm)" >> $GITHUB_ENV

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Download iOS toolchain
      run: |
        curl -L https://raw.githubusercontent.com/leetal/ios-cmake/master/ios.toolchain.cmake -o ios.toolchain.cmake

    - name: Build for iOS Device (arm64)
      run: |
        # First build native tablegen
        mkdir build-native
        cd build-native
        cmake ../llvm \
          -G Ninja \
          -DCMAKE_OSX_ARCHITECTURES="arm64" \
          -DCMAKE_BUILD_TYPE=Release \
          -DLLVM_TARGETS_TO_BUILD="" \
          -DLLVM_ENABLE_PROJECTS="" \
          -DLLVM_BUILD_TOOLS=ON \
          -DLLVM_INCLUDE_TOOLS=ON \
          -DLLVM_INCLUDE_UTILS=ON \
          -DLLVM_TOOL_LLVM_TBLGEN_BUILD=ON \
          -DLLVM_BUILD_STATIC=ON \
          -DBUILD_SHARED_LIBS=OFF \
          -DLLVM_ENABLE_THREADS=ON \
          -DLLVM_ENABLE_ASSERTIONS=OFF \
          -DLLVM_ENABLE_RTTI=OFF \
          -DLLVM_ENABLE_EH=OFF \
          -DLLVM_ENABLE_TERMINFO=OFF \
          -DLLVM_ENABLE_LIBXML2=OFF \
          -DLLVM_ENABLE_ZLIB=OFF
        ninja llvm-tblgen
        ls -la bin/  # 检查 bin 目录内容
        NATIVE_TBLGEN="$(pwd)/bin/llvm-tblgen"
        echo "Native tablegen path: $NATIVE_TBLGEN"  # 打印路径
        test -f "$NATIVE_TBLGEN" || exit 1  # 确保文件存在
        cd ..

        # Then build for iOS
        mkdir build-ios-device
        cd build-ios-device
        cmake ../llvm \
          -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=../ios.toolchain.cmake \
          -DPLATFORM=OS64 \
          -DENABLE_BITCODE=0 \
          -DENABLE_ARC=0 \
          -DENABLE_VISIBILITY=1 \
          -DARCHS="arm64" \
          -DCMAKE_BUILD_TYPE=Release \
          -DDEPLOYMENT_TARGET=13.0 \
          -DCMAKE_C_FLAGS="-arch arm64" \
          -DCMAKE_CXX_FLAGS="-arch arm64" \
          -DCMAKE_ASM_FLAGS="-arch arm64" \
          -DLLVM_TARGETS_TO_BUILD="AArch64" \
          -DLLVM_DEFAULT_TARGET_TRIPLE="arm64-apple-ios13.0" \
          -DLLVM_ENABLE_PROJECTS="" \
          -DLLVM_BUILD_TOOLS=OFF \
          -DLLVM_BUILD_UTILS=OFF \
          -DLLVM_INCLUDE_TESTS=OFF \
          -DLLVM_INCLUDE_EXAMPLES=OFF \
          -DLLVM_ENABLE_BACKTRACES=OFF \
          -DLLVM_ENABLE_ZLIB=OFF \
          -DLLVM_BUILD_STATIC=ON \
          -DBUILD_SHARED_LIBS=OFF \
          -DCMAKE_INSTALL_PREFIX=../install \
          -DLLVM_ENABLE_ASSERTIONS=OFF \
          -DLLVM_ENABLE_EH=OFF \
          -DLLVM_ENABLE_RTTI=OFF \
          -DLLVM_ENABLE_MODULES=OFF \
          -DLLVM_ENABLE_THREADS=ON \
          -DLLVM_OPTIMIZED_TABLEGEN=OFF \
          -DLLVM_TABLEGEN_EXE="$NATIVE_TBLGEN" \
          -DLLVM_BUILD_TABLEGEN=OFF \
          -DLLVM_ENABLE_TERMINFO=OFF \
          -DLLVM_ENABLE_LIBXML2=OFF \
          -DLLVM_ENABLE_LIBEDIT=OFF \
          -DLLVM_ENABLE_FFI=OFF \
          -DLLVM_ENABLE_PLUGINS=OFF \
          -DLLVM_ENABLE_PIC=OFF \
          -DLLVM_BUILD_32_BITS=OFF \
          -DLLVM_BUILD_LLVM_DYLIB=OFF \
          -DLLVM_ENABLE_WARNINGS=OFF \
          -DLLVM_ENABLE_LTO=OFF \
          -DHAVE_STEADY_CLOCK=0 \
          -DLLVM_BUILD_RUNTIME=OFF \
          -DLLVM_TOOL_LLVM_CONFIG_BUILD=OFF \
          -DLLVM_TOOL_LLVM_MC_BUILD=OFF \
          -DLLVM_INCLUDE_BENCHMARKS=OFF \
          -DLLVM_INCLUDE_RUNTIMES=OFF \
          -DLLVM_ENABLE_Z3_SOLVER=OFF \
          -DLLVM_ENABLE_LIBCXX=OFF \
          -DLLVM_ENABLE_BINDINGS=OFF \
          -DLLVM_ENABLE_OCAMLDOC=OFF \
          -DLLVM_ENABLE_PEDANTIC=OFF \
          -DLLVM_ENABLE_WERROR=OFF \
          -DLLVM_ENABLE_DUMP=OFF \
          -DLLVM_ENABLE_EXPENSIVE_CHECKS=OFF \
          -DLLVM_ENABLE_TIMESTAMPS=OFF \
          -DLLVM_ENABLE_UNWIND_TABLES=OFF \
          -DLLVM_ENABLE_INSTALL_RPATH=OFF \
          -DLLVM_ENABLE_GLOBAL_ISEL=OFF \
          -DLLVM_ENABLE_DOXYGEN=OFF \
          -DLLVM_ENABLE_SPHINX=OFF \
          -DLLVM_ENABLE_ZSTD=OFF \
          -DLLVM_ENABLE_CURL=OFF \
          -DLLVM_ENABLE_LIBPFM=OFF

        ninja

    - name: Package Library
      run: |
        mkdir -p universal/lib
        
        # Copy LLVM libraries
        find build-ios-device -name "*.a" -exec cp {} universal/lib/ \;
        
        # Copy headers
        mkdir -p universal/include
        cp -r llvm/include/* universal/include/ || true
        cp -r clang/include/* universal/include/ || true
        
        # Create zip package
        cd universal
        zip -r ../llvm-ios.zip .

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: llvm-ios
        path: llvm-ios.zip